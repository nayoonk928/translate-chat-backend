name: 프로젝트 빌드 및 JUnit 테스트

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  # 빌드 테스트
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Copy Secret
        env:
          OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
          OCCUPY_SECRET_DIR: src/main/resources
          OCCUPY_SECRET_TEST_DIR: src/test/resources
          OCCUPY_SECRET_DIR_FILE_NAME: application-secret.yml
        run: |
          mkdir -p $OCCUPY_SECRET_DIR
          mkdir -p $OCCUPY_SECRET_TEST_DIR
          
          echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME &&
          echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_TEST_DIR/$OCCUPY_SECRET_DIR_FILE_NAME

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up yml
        run: |
          mkdir -p ./src/main/resources/
          echo "${{ secrets.APPLICATION }}" > src/main/resources/application-local.yml
          cat ./src/main/resources/application-local.yml

      - name: Gradle Build
        run: ./gradlew clean build --exclude-task test

  # JUnit 테스트
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Copy Secret
        env:
          OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
          OCCUPY_SECRET_DIR: src/main/resources
          OCCUPY_SECRET_TEST_DIR: src/test/resources
          OCCUPY_SECRET_DIR_FILE_NAME: application-secret.yml
        run: |
          mkdir -p $OCCUPY_SECRET_DIR
          mkdir -p $OCCUPY_SECRET_TEST_DIR
          
          echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME &&
          echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_TEST_DIR/$OCCUPY_SECRET_DIR_FILE_NAME

      - name: Set up yml
        run: |
          mkdir -p ./src/main/resources/
          echo "${{ secrets.APPLICATION_TEST }}" > src/main/resources/application-test.yml
          cat ./src/main/resources/application-test.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run test
        run: ./gradlew --info test

      - name: Publish JUnit Test Result
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/**/*.xml'

      - name: Comment on Test Failures
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'